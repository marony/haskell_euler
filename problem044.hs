import Data.List
import Debug.Trace

{-
Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70  22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?

[1,5,12,22,35,51,70,92,117,145,176,210,247,287,330,376,425,477,532,590,651,715,782,852,925,1001,1080,1162,1247,1335,1426,1520,1617,1717,1820,1926,2035,2147,2262,2380,2501,2625,2752,2882,3015,3151,3290,3432,3577,3725,3876,4030,4187,4347,4510,4676,4845,5017,5192,5370,5551,5735,5922,6112,6305,6501,6700,6902,7107,7315,7526,7740,7957,8177,8400,8626,8855,9087,9322,9560,9801,10045,10292,10542,10795,11051,11310,11572,11837,12105,12376,12650,12927,13207,13490,13776,14065,14357,14652,14950]
-}

{-
p(a) + p(b) == p(c)
p(b) - p(a) == p(d)
answer = min|p(d)|

a <- [1..X]
b <- [(a + 1)..Y]

-}

pentagonal :: (Integral a, Show a) => a -> a
pentagonal n = (3 * n * n - n) `div` 2

main :: IO ()
main = putStr $ show $ list
-- main = putStr $ show $ takeWhile (\n -> (pentagonal n) + (pentagonal (n + 1)) <= (pentagonal (n + 2))) [1..100]
